# Generated by Django 3.2.13 on 2022-09-18 02:08

from django.db import migrations, models
import edc_crf.model_mixins.crf_status_model_mixin


class Migration(migrations.Migration):
    dependencies = [
        ("meta_subject", "0150_auto_20220914_0039"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="healtheconomicssimple",
            options={
                "default_permissions": ("add", "change", "delete", "view", "export", "import"),
                "get_latest_by": "modified",
                "ordering": ("-modified", "-created"),
                "verbose_name": "Health Economics (M3)",
                "verbose_name_plural": "Health Economics (M3)",
            },
        ),
        migrations.AddField(
            model_name="bloodresultsfbc",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultsfbc",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultsglu",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultsglu",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultshba1c",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultshba1c",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultsins",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultsins",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslft",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslft",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultslipid",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultsrft",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="bloodresultsrft",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsfbc",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsfbc",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsglu",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsglu",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultshba1c",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultshba1c",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsins",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsins",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslft",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslft",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultslipid",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsrft",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalbloodresultsrft",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectvisitmissed",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectvisitmissed",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AddField(
            model_name="subjectvisitmissed",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddField(
            model_name="subjectvisitmissed",
            name="crf_status_comments",
            field=models.TextField(
                blank=True,
                help_text="for example, why some data is still pending",
                null=True,
                verbose_name="Any comments related to status of this CRF",
            ),
        ),
        migrations.AlterField(
            model_name="complications",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="complicationsglycemia",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="concomitantmedication",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="delivery",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="dietandlifestyle",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="egfrdropnotification",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="eq5d3l",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="followupexamination",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="followupvitals",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="glucose",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="healtheconomics",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="healtheconomicssimple",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="hepatitistest",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcomplications",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcomplicationsglycemia",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalconcomitantmedication",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldelivery",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicaldietandlifestyle",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalegfrdropnotification",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicaleq5d3l",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalfollowupexamination",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalfollowupvitals",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalglucose",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalhealtheconomics",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalhealtheconomicssimple",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalhepatitistest",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalmalariatest",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalmedicationadherence",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalmnsi",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalotherarvregimens",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalpatienthistory",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalphysicalexam",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalpregnancyupdate",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalsf12",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalstudymedication",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalurinedipsticktest",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="historicalurinepregnancy",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="malariatest",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="medicationadherence",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="mnsi",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="otherarvregimens",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="patienthistory",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="physicalexam",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="pregnancyupdate",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="sf12",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="studymedication",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="urinedipsticktest",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AlterField(
            model_name="urinepregnancy",
            name="crf_status",
            field=models.CharField(
                choices=[
                    ("INCOMPLETE", "Incomplete (some data pending)"),
                    ("COMPLETE", "Complete"),
                ],
                default=edc_crf.model_mixins.crf_status_model_mixin.get_crf_status_default,
                help_text="If some data is still pending, flag this CRF as incomplete",
                max_length=25,
                verbose_name="CRF status",
            ),
        ),
        migrations.AddIndex(
            model_name="bloodresultsfbc",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_54fe81_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bloodresultsglu",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_93fda3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bloodresultshba1c",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_c357be_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bloodresultsins",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_7417a1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bloodresultslft",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_00da20_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bloodresultslipid",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_9692a2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bloodresultsrft",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_b66983_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complications",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_6b215d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complicationsglycemia",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_49362b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="concomitantmedication",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_1275b5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="delivery",
            index=models.Index(
                fields=["subject_visit", "site", "id"], name="meta_subjec_subject_e0559c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="delivery",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_9ab861_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dietandlifestyle",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_756ef7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="egfrdropnotification",
            index=models.Index(
                fields=["subject_visit", "site", "id"], name="meta_subjec_subject_e1dd63_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="egfrdropnotification",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_a11e07_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="eq5d3l",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_51b806_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="followupexamination",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_38241c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="followupvitals",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_389589_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="glucose",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_c23092_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="healtheconomics",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_f0fde8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="healtheconomicssimple",
            index=models.Index(
                fields=["subject_visit", "site", "id"], name="meta_subjec_subject_a13289_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="healtheconomicssimple",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_cad3f5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="hepatitistest",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_9fa552_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="malariatest",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_c33a9b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="medicationadherence",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_0fbe25_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mnsi",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_24180c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="otherarvregimens",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_a313e9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patienthistory",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_a7a068_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="physicalexam",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_d01a41_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="pregnancyupdate",
            index=models.Index(
                fields=["subject_visit", "site", "id"], name="meta_subjec_subject_4cce95_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pregnancyupdate",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_272949_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="sf12",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_12a9fb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studymedication",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_d338e8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="subjectvisitmissed",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_a6b7ab_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="urinedipsticktest",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_d270e1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="urinepregnancy",
            index=models.Index(
                fields=["subject_visit", "report_datetime"],
                name="meta_subjec_subject_062bc3_idx",
            ),
        ),
    ]
