# Generated by Django 5.2.6 on 2025-09-30 22:53

import _socket
import django.contrib.sites.managers
import django.core.validators
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_crypto_fields.fields.encrypted_char_field
import django_revision.revision_field
import edc_consent.managers
import edc_consent.validators
import edc_sites.managers
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalSubjectConsentSpfq",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        default="",
                        editable=False,
                        help_text="System field. From git repository (tag:branch:commit), project metadata, project toml, project VERSION, or settings.",
                        max_length=75,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        default="",
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device created",
                    ),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device modified",
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                ("subject_identifier", models.CharField(db_index=True, max_length=50)),
                (
                    "consent_reviewed",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have reviewed the consent with the participant",
                    ),
                ),
                (
                    "study_questions",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have answered all questions the participant had about the study",
                    ),
                ),
                (
                    "assessment_score",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have asked the participant questions about this study and the participant has demonstrated understanding",
                    ),
                ),
                (
                    "consent_signature",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have verified that the participant has signed the consent form",
                    ),
                ),
                (
                    "consent_copy",
                    models.CharField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("Declined", "Yes, but subject declined copy"),
                        ],
                        help_text="If declined, return copy with the consent",
                        max_length=20,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes_or_declined],
                        verbose_name="I have provided the participant with a copy of their signed informed consent",
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default="",
                        editable=False,
                        help_text="Hold slug field values for quick search. Excludes encrypted fields",
                        max_length=250,
                    ),
                ),
                (
                    "initials",
                    django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                        blank=True,
                        default="",
                        help_text=" (Encryption: RSA local)",
                        max_length=71,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Ensure initials consist of letters only in upper case, no spaces.",
                                regex="^[A-Z]{2,3}$",
                            )
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "consent_datetime",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Consent datetime",
                    ),
                ),
                ("report_datetime", models.DateTimeField(editable=False, null=True)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("sw", "Swahili"),
                            ("en-gb", "British English"),
                            ("en", "English"),
                            ("mas", "Maasai"),
                        ],
                        help_text="The language used for the consent process will also be used during data collection.",
                        max_length=25,
                        verbose_name="Language of consent",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        default="",
                        editable=False,
                        help_text="label_lower of this model class. Will be different if instance has been added/edited via a proxy model",
                        max_length=50,
                        verbose_name="model",
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0",
                        editable=False,
                        help_text="See 'consent definition' for consent versions by period.",
                        max_length=10,
                        verbose_name="Consent version",
                    ),
                ),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Subject Consent for SPFQ",
                "verbose_name_plural": "historical Subject Consents for SPFQ",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Spfq",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        default="",
                        editable=False,
                        help_text="System field. From git repository (tag:branch:commit), project metadata, project toml, project VERSION, or settings.",
                        max_length=75,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        default="",
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device created",
                    ),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device modified",
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("subject_identifier", models.CharField(max_length=50, unique=True)),
                (
                    "report_datetime",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "a01",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        help_text="for example: when and how to take or use a treatment",
                        max_length=25,
                        verbose_name="I understood the treatment process in this trial",
                    ),
                ),
                (
                    "a02",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        help_text="for example: visits and procedures, time commitment, who to contact with questions",
                        max_length=25,
                        verbose_name="The information given to me before I joined the trial was everything I wanted to know",
                    ),
                ),
                (
                    "a03",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        help_text="for example: visits and procedures, time commitment, who to contact with questions",
                        max_length=25,
                        verbose_name="The information given to me before I joined the trial was easy for me to understand",
                    ),
                ),
                (
                    "a04",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        max_length=25,
                        verbose_name="I felt comfortable that I could ask any questions before I joined the trial",
                    ),
                ),
                (
                    "b01",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        help_text="for example: comfort and privacy of treatment area, waiting area, parking, ease of access to the site",
                        max_length=25,
                        verbose_name="Overall I was satisfied with the trial site",
                    ),
                ),
                (
                    "b02",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        max_length=25,
                        verbose_name="My trial visits were well organized",
                    ),
                ),
                (
                    "b03",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        max_length=25,
                        verbose_name="My trial visits were scheduled at a convenient time for me",
                    ),
                ),
                (
                    "b04",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        max_length=25,
                        verbose_name="The staff treated me with respect",
                    ),
                ),
                (
                    "b05",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        max_length=25,
                        verbose_name="I felt comfortable that I could ask questions during the trial",
                    ),
                ),
                (
                    "b06",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        max_length=25,
                        verbose_name="I was satisfied with the answers I have received to my questions during the trial",
                    ),
                ),
                (
                    "b07",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="for example: in person visits, questionnaires, forms",
                        max_length=25,
                        verbose_name="The time taken to collect data was acceptable to me",
                    ),
                ),
                (
                    "b08",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="for example: household chores, work commitments, eating",
                        max_length=25,
                        verbose_name="The impact the trial has had on my daily activities is acceptable",
                    ),
                ),
                (
                    "b09",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="for example: in person, online questionnaire, diary, wearable sensors, monitoring machines, technology",
                        max_length=25,
                        verbose_name="The way in which trial data is being collected is acceptable to me",
                    ),
                ),
                (
                    "b10",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        help_text="for example: blood tests, scans etc.",
                        max_length=25,
                        verbose_name="Optional: I am being kept informed of the results of my medical tests done during the trial, including during screening",
                    ),
                ),
                (
                    "c01",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=25,
                        verbose_name="I was informed when I had completed the trial",
                    ),
                ),
                (
                    "c02",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=25,
                        verbose_name="I was informed of any future opportunities to access the overall trial results if I wanted to",
                    ),
                ),
                (
                    "c03",
                    models.CharField(
                        choices=[
                            ("very_difficult", "Very difficult"),
                            ("difficult", "Difficult"),
                            ("neutral", "Neutral"),
                            ("easy", "Easy"),
                            ("very_easy", "Very easy"),
                        ],
                        max_length=25,
                        verbose_name="How easy was it to take the medication?",
                    ),
                ),
                (
                    "c04",
                    models.CharField(
                        choices=[
                            ("not_at_all", "Not at all"),
                            ("slight", "Slight"),
                            ("moderate", "Moderate"),
                            ("extreme", "Extreme"),
                            ("severe", "Severe"),
                        ],
                        max_length=25,
                        verbose_name="Did you experience any burden or side effects?",
                    ),
                ),
                (
                    "c05",
                    models.CharField(
                        choices=[
                            ("not_at_all", "Not at all"),
                            ("slightly", "Slightly"),
                            ("moderately", "Moderately"),
                            ("highly", "Highly"),
                            ("very_highly", "Very highly"),
                        ],
                        max_length=25,
                        verbose_name="How acceptable was it to take the drug?",
                    ),
                ),
                (
                    "c06",
                    models.CharField(
                        choices=[
                            ("very_difficult", "Very difficult"),
                            ("difficult", "Difficult"),
                            ("neutral", "Neutral"),
                            ("easy", "Easy"),
                            ("very_easy", "Very easy"),
                        ],
                        max_length=25,
                        verbose_name="How easy was it to fit the medication into your routine?",
                    ),
                ),
                (
                    "c07",
                    models.CharField(
                        choices=[
                            ("not_at_all", "Not at all"),
                            ("slight", "Slight"),
                            ("moderate", "Moderate"),
                            ("extreme", "Extreme"),
                            ("severe", "Severe"),
                        ],
                        max_length=25,
                        verbose_name="How burdensome was taking part in the trial?",
                    ),
                ),
                (
                    "c08",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        help_text="for example: future treatment, follow-up contact details",
                        max_length=25,
                        verbose_name="Overall, I was satisfied with the information I received about future support after the trial",
                    ),
                ),
                (
                    "c09",
                    models.CharField(
                        choices=[
                            ("strongly_disagree", "Strongly disagree"),
                            ("disagree", "disagree"),
                            ("neutral", "Neutral"),
                            ("agree", "Agree"),
                            ("strongly_agree", "Strongly agree"),
                        ],
                        max_length=25,
                        verbose_name="Overall, I was satisfied with my trial experience",
                    ),
                ),
                (
                    "c10",
                    models.CharField(
                        choices=[
                            ("much_less_expected", "Much less than expected"),
                            ("somewhat_less_expected", "Somewhat less than expected"),
                            ("same_as_expected", "Same as expected"),
                            ("somewhat_more_expected", "Somewhat more than expected"),
                            ("much_more_expected", "Much more than expected"),
                        ],
                        max_length=25,
                        verbose_name="Compared to when the trial started, the overall commitment required was similar to what I expected",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback Questionnaire (SPFQ)",
                "verbose_name_plural": "Feedback Questionnaires (SPFQ)",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
                "indexes": [
                    models.Index(
                        fields=["modified", "created"],
                        name="meta_spfq_s_modifie_63f7ef_idx",
                    ),
                    models.Index(
                        fields=["user_modified", "user_created"],
                        name="meta_spfq_s_user_mo_93b76e_idx",
                    ),
                ],
            },
            managers=[
                ("on_site", edc_sites.managers.CurrentSiteManager()),
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SpfqList",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        default="",
                        editable=False,
                        help_text="System field. From git repository (tag:branch:commit), project metadata, project toml, project VERSION, or settings.",
                        max_length=75,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        default="",
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device created",
                    ),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device modified",
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("subject_identifier", models.CharField(max_length=50, unique=True)),
                ("sid", models.IntegerField(unique=True)),
                ("last_visit_code", models.CharField(max_length=25)),
                ("last_appt_datetime", models.DateTimeField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=10
                    ),
                ),
                (
                    "weight_bin",
                    models.CharField(
                        choices=[
                            ("lt_35", "<35"),
                            ("gte_35__lte_49", "35-49"),
                            ("gte_50", ">=50"),
                        ],
                        max_length=25,
                    ),
                ),
                ("date_generated", models.DateTimeField()),
                (
                    "site",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "SPFQ List",
                "verbose_name_plural": "SPFQ List",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
                "indexes": [
                    models.Index(
                        fields=["modified", "created"],
                        name="meta_spfq_s_modifie_a28008_idx",
                    ),
                    models.Index(
                        fields=["user_modified", "user_created"],
                        name="meta_spfq_s_user_mo_558be1_idx",
                    ),
                ],
            },
            managers=[
                ("on_site", edc_sites.managers.CurrentSiteManager()),
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SubjectConsentSpfq",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        default="",
                        editable=False,
                        help_text="System field. From git repository (tag:branch:commit), project metadata, project toml, project VERSION, or settings.",
                        max_length=75,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        default="",
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                        verbose_name="Hostname created",
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        default="",
                        help_text="System field. (modified on every save)",
                        max_length=50,
                        verbose_name="Hostname modified",
                    ),
                ),
                (
                    "device_created",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device created",
                    ),
                ),
                (
                    "device_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=10,
                        verbose_name="Device modified",
                    ),
                ),
                (
                    "locale_created",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale created",
                    ),
                ),
                (
                    "locale_modified",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Auto-updated by Modeladmin",
                        max_length=10,
                        verbose_name="Locale modified",
                    ),
                ),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("subject_identifier", models.CharField(max_length=50, unique=True)),
                (
                    "consent_reviewed",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have reviewed the consent with the participant",
                    ),
                ),
                (
                    "study_questions",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have answered all questions the participant had about the study",
                    ),
                ),
                (
                    "assessment_score",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have asked the participant questions about this study and the participant has demonstrated understanding",
                    ),
                ),
                (
                    "consent_signature",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        help_text="If no, participant is not eligible.",
                        max_length=3,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes],
                        verbose_name="I have verified that the participant has signed the consent form",
                    ),
                ),
                (
                    "consent_copy",
                    models.CharField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("Declined", "Yes, but subject declined copy"),
                        ],
                        help_text="If declined, return copy with the consent",
                        max_length=20,
                        null=True,
                        validators=[edc_consent.validators.eligible_if_yes_or_declined],
                        verbose_name="I have provided the participant with a copy of their signed informed consent",
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        db_index=True,
                        default="",
                        editable=False,
                        help_text="Hold slug field values for quick search. Excludes encrypted fields",
                        max_length=250,
                    ),
                ),
                (
                    "initials",
                    django_crypto_fields.fields.encrypted_char_field.EncryptedCharField(
                        blank=True,
                        default="",
                        help_text=" (Encryption: RSA local)",
                        max_length=71,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Ensure initials consist of letters only in upper case, no spaces.",
                                regex="^[A-Z]{2,3}$",
                            )
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "consent_datetime",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Consent datetime",
                    ),
                ),
                ("report_datetime", models.DateTimeField(editable=False, null=True)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("sw", "Swahili"),
                            ("en-gb", "British English"),
                            ("en", "English"),
                            ("mas", "Maasai"),
                        ],
                        help_text="The language used for the consent process will also be used during data collection.",
                        max_length=25,
                        verbose_name="Language of consent",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        default="",
                        editable=False,
                        help_text="label_lower of this model class. Will be different if instance has been added/edited via a proxy model",
                        max_length=50,
                        verbose_name="model",
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0",
                        editable=False,
                        help_text="See 'consent definition' for consent versions by period.",
                        max_length=10,
                        verbose_name="Consent version",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subject Consent for SPFQ",
                "verbose_name_plural": "Subject Consents for SPFQ",
                "abstract": False,
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "export",
                    "import",
                ),
                "default_manager_name": "objects",
                "indexes": [
                    models.Index(
                        fields=["modified", "created"],
                        name="meta_spfq_s_modifie_68dd38_idx",
                    ),
                    models.Index(
                        fields=["user_modified", "user_created"],
                        name="meta_spfq_s_user_mo_e206e3_idx",
                    ),
                ],
            },
            managers=[
                ("on_site", django.contrib.sites.managers.CurrentSiteManager()),
                ("objects", edc_consent.managers.ConsentObjectsManager()),
            ],
        ),
    ]
