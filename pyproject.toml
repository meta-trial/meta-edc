[project]
name = "meta-edc"
version = "1.1.10"
description = "META Trial EDC (https://www.isrctn.com/ISRCTN76157257)"
readme = "README.rst"
keywords = [
    "django",
    "clinicedc",
    "META EDC",
    "EDC",
    "clinical trials",
    "META Trial",
    "ISRCTN76157257",
]
authors = [
    { name = "Erik van Widenfelt", email = "ew2789@gmail.com" },
    { name = "Jonathan Willitts", email = "j.willitts@ucl.ac.uk" }
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = "GPL-3.0-or-later"
license-files = ["LICEN[CS]E*"]
requires-python = '>=3.12'
dependencies = [
    "beautifulsoup4>=4.13.4",
    "celery[redis]>=5.5.3",
    "django-pylabels>=1.0.1",
    "edc>=1.2.0",
]

[dependency-groups]
test = [
    "django-webtest>=1.9.13",
    "edc-test-settings>=1.1.2",
    "edc-test-utils>=1.0.0",
    "faker>=37.4.2",
    "model-bakery>=1.20.5",
    "time-machine>=2.16.0",
]

[build-system]
requires = ["uv_build>=0.8.2,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-root = ""
module-name = [
    "meta_ae",
    "meta_analytics",
    "meta_auth",
    "meta_consent",
    "meta_dashboard",
    "meta_data_manager",
    "meta_edc",
    "meta_export",
    "meta_labs",
    "meta_lists",
    "meta_pharmacy",
    "meta_prn",
    "meta_rando",
    "meta_reports",
    "meta_screening",
    "meta_sites",
    "meta_subject",
    "meta_visit_schedule",
]
source-include = ["meta_*/templates/**", "meta_*/locale/**", "locale/**"]
source-exclude = ["meta_*/tests/**", "meta_*/notebooks/**", "tests/**"]
namespace = false

#[tool.uv]
#cache-keys = [{ file = "pyproject.toml" }, { git = true }]

[tool.black]
line-length = 95
target-version = ["py312"]
extend-exclude = '''^(.*\/)*\b(migrations)\b($|\/.*$)'''

[tool.isort]
profile = "black"
py_version = "312"
skip = [".tox", ".eggs", "migrations", "_version.py"]

[tool.coverage.run]
parallel = false
branch = true
source = ["meta_edc"]

[tool.coverage.paths]
source = ["meta_edc"]

[tool.coverage.report]
show_missing = true
skip_covered = true
omit = ["TODO.txt"]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    py{312,313}-dj{52}-edc{prod,dev},
    py{313}-dj{dev}-edc{dev},
    lint
    pre-commit

isolated_build = true

[gh-actions]
python =
    3.12: py312, lint, pre-commit
    3.13: py313

[gh-actions:env]
DJANGO =
    5.2: dj52, lint, pre-commit
    dev: djdev
EDC_CODEBASE =
    Prod: edcprod, lint, pre-commit
    Dev: edcdev

[testenv]
deps =
    -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/tox.txt
    -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/test_utils.txt
    dj52: Django>=5.2,<5.3
    djdev: https://github.com/django/django/tarball/main

commands =
    pip install -U pip
    python --version
    pip --version
    edcdev: pip install -U -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/edc.txt
    pip freeze
    coverage run -a runtests.py
    coverage report

[testenv:lint]
deps = -r https://raw.githubusercontent.com/clinicedc/edc/develop/requirements.tests/lint.txt
commands =
    python --version
    pip --version
    pip freeze
    isort --profile=black --check --diff .
    black --check --diff .
    flake8 .

[testenv:pre-commit]
deps = pre-commit
commands =
    python --version
    pip --version
    pip freeze
    pre-commit run --all-files
"""
